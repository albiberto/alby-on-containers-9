@using AlbyOnContainers.ProductDataManager.Domain

<MudDialog>
    <DialogContent>
        <div class="d-flex flex-column">
            @if (Category.Id != Guid.Empty)
            {
                <MudTextField Value="@Category.Id.ToString()" Label="Identifier" ReadOnly="true"/>
            }
            <MudTextField @bind-Value="@Category.Name" Label="Name" Placeholder="Insert category name" Class="pt-2" Clearable="true" MaxLength="30"/>
            <MudTextField @bind-Value="@Category.Description" Label="Description" Placeholder="Insert category description" Class="pt-2" Clearable="true" MaxLength="512"/>
            
            <MudSelect T="bool" Value="@Category.Enabled" ValueChanged="EnableChanged" Label="Enabled" Class="pt-2">
                <MudSelectItem Value="true">Yes</MudSelectItem>
                <MudSelectItem Value="false">No</MudSelectItem>
            </MudSelect>
            
            <MudSelect T="Guid" Label="Parent" Value="@SelectedParent(Category.ParentId)" ValueChanged="ParentChanged">
                @foreach (var category in Categories.Where(category => category.Id != Category.Id))
                {
                    <MudSelectItem Value="@category.Id">@category.Name</MudSelectItem>
                }
            </MudSelect>

        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public required IMudDialogInstance MudDialog { get; set; }
    [Parameter] public required Category Category { get; set; }
    [Parameter] public required IReadOnlyCollection<Category> Categories { get; set; } = [];

    private void EnableChanged(bool @checked)
    {
        if (@checked)
            Category.Enable();
        else
            Category.Disable();
    }

    static Guid SelectedParent(Guid? guid) => guid ?? Guid.Empty;
    void ParentChanged(Guid parent) => Category.ParentId = parent == Guid.Empty ? null : parent;
    
    void Cancel() => MudDialog.Cancel();
    void Save() => MudDialog.Close(DialogResult.Ok(Category.Id));
}